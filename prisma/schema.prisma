generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  email String @unique
  password String
  name String
  token String?
  usertype Int @default(0)
  state Int @default(1)
  sells Sell[]
  ratings Rating[]
}

model Sell {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  amount Float
  userId Int
  gameId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)
}

model Rating {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  rating Float
  Comment String?
  likes Int @default(0)
  dislikes Int @default(0)
  userId Int
  gameId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)
}

model Game {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  name String
  price Float
  description String
  company String
  state Int @default(1)
  sells Sell[]
  ratings Rating[]
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  images GameImage[]
  trailers GameTrailer[]
  attachmentId? Int @unique
  attachment GameAttachment @relation(fields: [attachmentId], references: [id], onDelete: Cascade)
}

model GameImage {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  url String
  gameId Int
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)
}

model GameTrailer {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  url String
  gameId Int
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)
}

model GameAttachment{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  url String
  gameId Int
  game Game?
}

model Category {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  name String
  games Game[]
}

model News {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  title String
  text String
  state Int @default(1)
}

